class Solution {
    public int[] sortedSquares(int[] nums) {
        int len=nums.length;

        PriorityQueue<Integer> p=new PriorityQueue<>();

        for(int i=0;i<len;i++){
            int temp=nums[i]*nums[i];
            p.add(temp);
        }

        for(int i=0;i<len;i++){
            int temp=p.poll();
            nums[i]=temp;
        }

        return nums;
    }
}



// class Solution {
//     public int[] sortedSquares(int[] nums) {
//         int len=nums.length;

//         PriorityQueue<Integer> p=new PriorityQueue<>();

//         for(int i=0;i<len;i++){
//             int temp=nums[i]*nums[i];
//             p.add(temp);
//         }

//         for(int i=0;i<len;i++){
//             int temp=p.poll();
//             nums[i]=temp;
//         }

//         return nums;
//     }
// }
